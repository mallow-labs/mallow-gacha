{
  "version": "3.0.1",
  "name": "candy_machine_core",
  "instructions": [
    {
      "name": "addNft",
      "docs": [
        "Add legacy NFTs to the gumball machine.",
        "",
        "# Accounts",
        "",
        "0. `[writable]` Candy Machine account",
        "1. `[signer]` Candy Machine authority"
      ],
      "accounts": [
        {
          "name": "candyMachine",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "Candy Machine account."
          ]
        },
        {
          "name": "mintAuthority",
          "isMut": false,
          "isSigner": true,
          "docs": [
            "Candy machine mint authority (add only allowed for the mint_authority)."
          ]
        },
        {
          "name": "authorityPda",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "seller",
          "isMut": false,
          "isSigner": true,
          "docs": [
            "Seller of the nft"
          ]
        },
        {
          "name": "mint",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenAccount",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "metadata",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "edition",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "allowlist",
          "isMut": false,
          "isSigner": false,
          "isOptional": true
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "tokenMetadataProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "index",
          "type": "u32"
        }
      ]
    },
    {
      "name": "addCoreAsset",
      "docs": [
        "Add Core assets to the gumball machine.",
        "",
        "# Accounts",
        "",
        "0. `[writable]` Candy Machine account",
        "1. `[signer]` Candy Machine authority"
      ],
      "accounts": [
        {
          "name": "candyMachine",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "Candy Machine account."
          ]
        },
        {
          "name": "mintAuthority",
          "isMut": false,
          "isSigner": true,
          "docs": [
            "Candy machine mint authority (add only allowed for the mint_authority)."
          ]
        },
        {
          "name": "authorityPda",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "seller",
          "isMut": false,
          "isSigner": true,
          "docs": [
            "Seller of the asset."
          ]
        },
        {
          "name": "asset",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "collection",
          "isMut": true,
          "isSigner": false,
          "isOptional": true,
          "docs": [
            "Core asset's collection if it's part of one."
          ]
        },
        {
          "name": "allowlist",
          "isMut": false,
          "isSigner": false,
          "isOptional": true
        },
        {
          "name": "mplCoreProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "index",
          "type": "u32"
        }
      ]
    },
    {
      "name": "initializeV2",
      "docs": [
        "Initialize the candy machine account with the specified data.",
        "",
        "# Accounts",
        "",
        "0. `[writable]` Candy Machine account (must be pre-allocated but zero content)",
        "2. `[]` Candy Machine authority",
        "3. `[signer]` Payer"
      ],
      "accounts": [
        {
          "name": "candyMachine",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "Candy Machine account. The account space must be allocated to allow accounts larger",
            "than 10kb.",
            ""
          ]
        },
        {
          "name": "authorityPda",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "Authority PDA used to verify minted NFTs to the collection.",
            ""
          ]
        },
        {
          "name": "authority",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "Candy Machine authority. This is the address that controls the upate of the candy machine.",
            ""
          ]
        },
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true,
          "docs": [
            "Payer of the transaction."
          ]
        }
      ],
      "args": [
        {
          "name": "itemCount",
          "type": "u64"
        }
      ]
    },
    {
      "name": "mintV2",
      "docs": [
        "Mint an NFT.",
        "",
        "Only the candy machine mint authority is allowed to mint. This handler mints both",
        "NFTs and Programmable NFTs.",
        "",
        "# Accounts",
        "",
        "0. `[writable]` Candy Machine account (must be pre-allocated but zero content)",
        "2. `[signer]` Candy Machine mint authority",
        "3. `[signer]` Payer",
        "4. `[writable]` Mint account of the NFT",
        "18. `[]` System program",
        "20. `[]` SlotHashes sysvar cluster data."
      ],
      "accounts": [
        {
          "name": "candyMachine",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "Candy machine account."
          ]
        },
        {
          "name": "mintAuthority",
          "isMut": false,
          "isSigner": true,
          "docs": [
            "Candy machine mint authority (mint only allowed for the mint_authority)."
          ]
        },
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true,
          "docs": [
            "Payer for the transaction and account allocation (rent)."
          ]
        },
        {
          "name": "buyer",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "NFT account owner.",
            ""
          ]
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "System program."
          ]
        },
        {
          "name": "recentSlothashes",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "SlotHashes sysvar cluster data.",
            ""
          ]
        }
      ],
      "args": []
    },
    {
      "name": "setAuthority",
      "docs": [
        "Set a new authority of the candy machine.",
        "",
        "# Accounts",
        "",
        "0. `[writable]` Candy Machine account",
        "1. `[signer]` Candy Machine authority"
      ],
      "accounts": [
        {
          "name": "candyMachine",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "Candy Machine account."
          ]
        },
        {
          "name": "authority",
          "isMut": false,
          "isSigner": true,
          "docs": [
            "Autority of the candy machine."
          ]
        }
      ],
      "args": [
        {
          "name": "newAuthority",
          "type": "publicKey"
        }
      ]
    },
    {
      "name": "setMintAuthority",
      "docs": [
        "Set a new mint authority of the candy machine.",
        "",
        "# Accounts",
        "",
        "0. `[writable]` Candy Machine account",
        "1. `[signer]` Candy Machine authority",
        "1. `[signer]` New candy machine authority"
      ],
      "accounts": [
        {
          "name": "candyMachine",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "Candy Machine account."
          ]
        },
        {
          "name": "authority",
          "isMut": false,
          "isSigner": true,
          "docs": [
            "Candy Machine authority"
          ]
        },
        {
          "name": "mintAuthority",
          "isMut": false,
          "isSigner": true,
          "docs": [
            "New candy machine authority"
          ]
        }
      ],
      "args": []
    },
    {
      "name": "withdraw",
      "docs": [
        "Withdraw the rent lamports and send them to the authority address.",
        "",
        "# Accounts",
        "",
        "0. `[writable]` Candy Machine account",
        "1. `[signer]` Candy Machine authority"
      ],
      "accounts": [
        {
          "name": "candyMachine",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "Candy Machine acccount."
          ]
        },
        {
          "name": "authority",
          "isMut": true,
          "isSigner": true,
          "docs": [
            "Authority of the candy machine."
          ]
        }
      ],
      "args": []
    }
  ],
  "accounts": [
    {
      "name": "CandyMachine",
      "docs": [
        "Candy machine state and config data."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "version",
            "docs": [
              "Version of the account."
            ],
            "type": "u8"
          },
          {
            "name": "features",
            "docs": [
              "Features flags."
            ],
            "type": {
              "array": [
                "u8",
                6
              ]
            }
          },
          {
            "name": "authority",
            "docs": [
              "Authority address."
            ],
            "type": "publicKey"
          },
          {
            "name": "mintAuthority",
            "docs": [
              "Authority address allowed to mint from the candy machine."
            ],
            "type": "publicKey"
          },
          {
            "name": "itemsRedeemed",
            "docs": [
              "Number of assets redeemed."
            ],
            "type": "u64"
          },
          {
            "name": "itemsAvailable",
            "docs": [
              "Number of assets available."
            ],
            "type": "u64"
          }
        ]
      }
    }
  ],
  "types": [
    {
      "name": "ConfigLineInput",
      "docs": [
        "Config line struct for storing asset (NFT) data pre-mint."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "mint",
            "docs": [
              "Mint account of the asset."
            ],
            "type": "publicKey"
          },
          {
            "name": "seller",
            "docs": [
              "Wallet that submitted the asset for sale."
            ],
            "type": "publicKey"
          }
        ]
      }
    },
    {
      "name": "ConfigLine",
      "docs": [
        "Config line struct for storing asset (NFT) data pre-mint."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "mint",
            "docs": [
              "Mint account of the asset."
            ],
            "type": "publicKey"
          },
          {
            "name": "seller",
            "docs": [
              "Wallet that submitted the asset for sale."
            ],
            "type": "publicKey"
          },
          {
            "name": "buyer",
            "docs": [
              "Wallet that will receive the asset upon sale. Empty until drawn."
            ],
            "type": "publicKey"
          },
          {
            "name": "tokenStandard",
            "docs": [
              "Token standard."
            ],
            "type": {
              "defined": "TokenStandard"
            }
          }
        ]
      }
    },
    {
      "name": "TokenStandard",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "NonFungible"
          },
          {
            "name": "Core"
          }
        ]
      }
    }
  ],
  "errors": [
    {
      "code": 6000,
      "name": "IncorrectOwner",
      "msg": "Account does not have correct owner"
    },
    {
      "code": 6001,
      "name": "Uninitialized",
      "msg": "Account is not initialized"
    },
    {
      "code": 6002,
      "name": "MintMismatch",
      "msg": "Mint Mismatch"
    },
    {
      "code": 6003,
      "name": "IndexGreaterThanLength",
      "msg": "Index greater than length"
    },
    {
      "code": 6004,
      "name": "NumericalOverflowError",
      "msg": "Numerical overflow error"
    },
    {
      "code": 6005,
      "name": "TooManyCreators",
      "msg": "Can only provide up to 4 creators to candy machine (because candy machine is one)"
    },
    {
      "code": 6006,
      "name": "CandyMachineEmpty",
      "msg": "Candy machine is empty"
    },
    {
      "code": 6007,
      "name": "HiddenSettingsDoNotHaveConfigLines",
      "msg": "Candy machines using hidden uris do not have config lines, they have a single hash representing hashed order"
    },
    {
      "code": 6008,
      "name": "CannotChangeNumberOfLines",
      "msg": "Cannot change number of lines unless is a hidden config"
    },
    {
      "code": 6009,
      "name": "CannotSwitchToHiddenSettings",
      "msg": "Cannot switch to hidden settings after items available is greater than 0"
    },
    {
      "code": 6010,
      "name": "IncorrectCollectionAuthority",
      "msg": "Incorrect collection NFT authority"
    },
    {
      "code": 6011,
      "name": "MetadataAccountMustBeEmpty",
      "msg": "The metadata account has data in it, and this must be empty to mint a new NFT"
    },
    {
      "code": 6012,
      "name": "NoChangingCollectionDuringMint",
      "msg": "Can't change collection settings after items have begun to be minted"
    },
    {
      "code": 6013,
      "name": "ExceededLengthError",
      "msg": "Value longer than expected maximum value"
    },
    {
      "code": 6014,
      "name": "MissingConfigLinesSettings",
      "msg": "Missing config lines settings"
    },
    {
      "code": 6015,
      "name": "CannotIncreaseLength",
      "msg": "Cannot increase the length in config lines settings"
    },
    {
      "code": 6016,
      "name": "CannotSwitchFromHiddenSettings",
      "msg": "Cannot switch from hidden settings"
    },
    {
      "code": 6017,
      "name": "CannotChangeSequentialIndexGeneration",
      "msg": "Cannot change sequential index generation after items have begun to be minted"
    },
    {
      "code": 6018,
      "name": "CollectionKeyMismatch",
      "msg": "Collection public key mismatch"
    },
    {
      "code": 6019,
      "name": "CouldNotRetrieveConfigLineData",
      "msg": "Could not retrive config line data"
    },
    {
      "code": 6020,
      "name": "NotFullyLoaded",
      "msg": "Not all config lines were added to the candy machine"
    },
    {
      "code": 6021,
      "name": "InstructionBuilderFailed",
      "msg": "Instruction could not be created"
    },
    {
      "code": 6022,
      "name": "MissingCollectionAuthorityRecord",
      "msg": "Missing collection authority record"
    },
    {
      "code": 6023,
      "name": "MissingMetadataDelegateRecord",
      "msg": "Missing metadata delegate record"
    },
    {
      "code": 6024,
      "name": "InvalidTokenStandard",
      "msg": "Invalid token standard"
    },
    {
      "code": 6025,
      "name": "MissingTokenAccount",
      "msg": "Missing token account"
    },
    {
      "code": 6026,
      "name": "MissingTokenRecord",
      "msg": "Missing token record"
    },
    {
      "code": 6027,
      "name": "MissingInstructionsSysvar",
      "msg": "Missing instructions sysvar account"
    },
    {
      "code": 6028,
      "name": "MissingSplAtaProgram",
      "msg": "Missing SPL ATA program"
    },
    {
      "code": 6029,
      "name": "InvalidAccountVersion",
      "msg": "Invalid account version"
    },
    {
      "code": 6030,
      "name": "NotPrimarySale",
      "msg": "Not a primary sale asset"
    },
    {
      "code": 6031,
      "name": "InvalidEditionAccount",
      "msg": "Invalid edition account"
    },
    {
      "code": 6032,
      "name": "InvalidMasterEditionSupply",
      "msg": "Invalid master edition supply"
    },
    {
      "code": 6033,
      "name": "PublicKeyMismatch",
      "msg": "Public key mismatch"
    },
    {
      "code": 6034,
      "name": "InvalidCollection",
      "msg": "Invalid collection"
    },
    {
      "code": 6035,
      "name": "GumballMachineLive",
      "msg": "Gumball machine live"
    }
  ],
  "metadata": {
    "address": "CndyV3LdqHUfDLmE5naZjVN8rBZz4tqhdefbAnjHG3JR",
    "origin": "anchor",
    "binaryVersion": "0.29.0",
    "libVersion": "0.29.0"
  }
}